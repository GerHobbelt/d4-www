---
title: Shape Examples
features:
  - Stacked Shapes
---

<h5>{{title}}</h5>
<p>
  d4's stack shape feature allows you to stack rects, circles and ellipses, which
  is useful when you don't want to limit your visual design. The following example
  takes the same dataset and displays it first as a rect, then circles and finally
  a collection of ellipses.
</p>
<hr/>
<script type="text/javascript" charset="utf-8" id='source_code'>
'use strict';

$(document).ready(function(){
  var data = [
      { year: '2010', unitsSold: 200, salesman : 'Bob' },
      { year: '2011', unitsSold: 200, salesman : 'Bob' },
      { year: '2012', unitsSold: 300, salesman : 'Bob' },
      { year: '2013', unitsSold: -400, salesman : 'Bob' },
      { year: '2014', unitsSold: -500, salesman : 'Bob' },
      { year: '2010', unitsSold: 100, salesman : 'Gina' },
      { year: '2011', unitsSold: 100, salesman : 'Gina' },
      { year: '2012', unitsSold: 200, salesman : 'Gina' },
      { year: '2013', unitsSold: -500, salesman : 'Gina' },
      { year: '2014', unitsSold: -600, salesman : 'Gina' },
      { year: '2010', unitsSold: 400, salesman : 'Average' },
      { year: '2011', unitsSold: 100, salesman : 'Average' },
      { year: '2012', unitsSold: 400, salesman : 'Average' },
      { year: '2013', unitsSold: -400, salesman : 'Average' },
      { year: '2014', unitsSold: -400, salesman : 'Average' }
    ];

  var parsedData = d4.parsers.nestedStack()
    .x(function(){
      return 'year';
    })
    .y(function(){
      return 'salesman';
    })
    .value(function(){
      return 'unitsSold';
    })(data);

  var rects = d4.charts.stackedColumn()
    .outerWidth($('#rects').width())
    .x(function(x){
      x.key('year');
    })
    .y(function(y){
      y.key('unitsSold');
    })
    .mixin({
      'name' : 'zeroLine',
      'feature' : d4.features.referenceLine
    })
    .using('zeroLine', function(zero) {
      zero
        .x1(function() {
          return this.x(0);
        })
        .x2(function() {
          return this.width;
        })
        .y1(function() {
          return this.y(0);
        })
        .y2(function() {
          return this.y(0);
        });
    });

  var circles = rects.clone();
  circles
  .mixout('bars')

  // remove the connectors because they really only look good when using rects.
  .mixout('connectors');

  // now make this the base for the ellipse chart.
  var ellipses = circles.clone();

  // mix the circles into the back of the chart so that they don't obscure the
  // data labels
  circles.mixin({
    'name' : 'circles',
    'feature' : d4.features.circleSeries,
    'index': 0
  });

  // mix the ellipes into the back of the chart so that they don't obscure the
  // data labels
  ellipses.mixin({
    'name' : 'ellipes',
    'feature' : d4.features.ellipseSeries,
    'index' : 0
  });

  d3.select('#rects')
  .datum(parsedData.data)
  .call(rects);

  d3.select('#circles')
  .datum(parsedData.data)
  .call(circles);

  d3.select('#ellipses')
  .datum(parsedData.data)
  .call(ellipses);

});

</script>
<div id="stacked_column">
  <div class="appendBottom">
  <span class="label average">Average</span>
  <span class="label gina">Gina</span>
  <span class="label bob">Bob</span>
  </div>
  <div id="rects"></div>
  <div id="circles"></div>
  <div id="ellipses"></div>
</div>
<h6>CSS Code</h6>
<pre><code class="language-css">
#stacked_column .d4 .series0 .bar.fill, #stacked_column .average {
    fill: #CD202C;
    background-color: #CD202C;
}

#stacked_column .d4 .series1 .bar.fill, #stacked_column .gina {
    fill: #AD005B;
    background-color: #AD005B;
}

#stacked_column .d4 .series2 .bar.fill, #stacked_column .bob {
    fill: #66307C;
    background-color: #66307C;
}
</code></pre>
<h6>JavaScript Code</h6>
<pre><code id="code" class="language-javascript"></code></pre>
{{> disqus }}
